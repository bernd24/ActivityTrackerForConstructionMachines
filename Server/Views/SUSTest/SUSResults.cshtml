@* @model UIAutomate.Models.SUSTest *@
@model IEnumerable<UIAutomate.Models.SUSTest>

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>SUSTest</h4>
<hr />
@using(Html.BeginForm("Edit", "SUSTest", FormMethod.Post, new { role = "form" }))
@* @using(Html.BeginForm("Edit", "SUSTest", 
                        new RouteValueDictionary { {"TestRoute1", "test"} },
                        FormMethod.Post,
                        new Dictionary<int, object> { {1, "SUSTest"} }
                    )   
        ) *@
{
<form asp-action="Edit" method="post">
    <div class="row">
    <div class="col-md-4">
         <table>
        <tr>
            <thead>
                <tr>
                    <th></th> 
                    <th> <div id="valid1">Strongly disagree</div>     </th> 
                    <th> <div id="valid2">Disagree</div> </th> 
                    <th> <div id="valid3">Neutral</div></th>
                    <th> <div id="valid4">Agree</div></th>
                    <th> <div id="valid5">Strongly agree</div> </th>
                </tr>  
            </thead>
            <tbody>
                
                @foreach (var item in Model as IEnumerable<UIAutomate.Models.SUSTest>) 
                {
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @* <input type="hidden" asp-for="@item"  /> *@
                <input type="hidden" asp-for="@item.Id"  />
                <input type="hidden" asp-for="@item.Question"  />
                <tr>
                    <th>
                        @Html.DisplayFor(model => item.Question)
                    </th>
                    <th>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="@item.StronglyDisagree" value="@item.StronglyDisagree" value-data ="@item.StronglyDisagree"/>
                                @* @Html.DisplayNameFor(model => item.StronglyDisagree) *@
                                 	@* @Html.CheckBoxFor(model => item.StronglyDisagree)  *@
                            </label>
                        </div>
                    </th>
                    <th>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="@item.Disagree" value="@item.Disagree" /> 
                                @* @Html.DisplayNameFor(model => item.Disagree) *@
                            </label>
                        </div>
                    </th>
                    <th>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="@item.Neutral" />
                                @* @Html.DisplayNameFor(model => item.Neutral) *@
                            </label>
                        </div>
                    </th>
                    <th>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="@item.Agree" /> 
                                @* @Html.DisplayNameFor(model => item.Agree) *@
                            </label>
                        </div>
                    </th>
                    <th>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="@item.StronglyAgree" /> 
                                @* @Html.DisplayNameFor(model => item.StronglyAgree) *@
                            </label>
                        </div>
                    </th>
                </tr>
                }
            </tbody> 
            
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary"  />
            </div>
        </div>
    </div>
</form>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
